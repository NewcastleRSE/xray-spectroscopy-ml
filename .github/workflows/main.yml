name: Test

on:
  push:
    branches:
      - '*'

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: MLP XYZ --> Xanes
        run: |
          rm -rf models/model_mlp_001
          python3 -m xanesnet.cli --mode train_xyz --in_file ./.github/workflows/inputs/in_mlp.yaml
          python3 -m xanesnet.cli --mode predict_xanes --in_model models/model_mlp_001 --in_file ./.github/workflows/inputs/in_predict.yaml


      - name: MLP Xanes --> XYZ
        run: |
          rm -rf models/model_mlp_001
          python3 -m xanesnet.cli --mode train_xanes --in_file ./.github/workflows/inputs/in_mlp.yaml
          python3 -m xanesnet.cli --mode predict_xyz --in_model models/model_mlp_001 --in_file ./.github/workflows/inputs/in_predict.yaml
          
      - name: CNN XYZ --> Xanes
        run: |
          rm -rf models/model_cnn_001
          python3 -m xanesnet.cli --mode train_xyz --in_file ./.github/workflows/inputs/in_cnn.yaml
          python3 -m xanesnet.cli --mode predict_xanes --in_model models/model_cnn_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: LSTM XYZ --> Xanes
        run: |
          rm -rf models/model_001
          python3 -m xanesnet.cli --mode train_xyz --in_file ./.github/workflows/inputs/in_lstm.yaml
          python3 -m xanesnet.cli --mode predict_xanes --in_model models/model_lstm_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: LSTM XANES --> XYZ
        run: |
          rm -rf models/model_lstm_001
          python3 -m xanesnet.cli --mode train_xanes --in_file ./.github/workflows/inputs/in_lstm.yaml
          python3 -m xanesnet.cli --mode predict_xyz --in_model models/model_lstm_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: CNN Xanes --> XYZ
        run: |
          rm -rf models/model_cnn_001
          python3 -m xanesnet.cli --mode train_xanes --in_file ./.github/workflows/inputs/in_cnn.yaml
          python3 -m xanesnet.cli --mode predict_xyz --in_model models/model_cnn_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: AE_MLP XYZ -> Xanes
        run: |
          rm -rf models/model_ae_mlp_001
          python3 -m xanesnet.cli --mode train_xyz --in_file ./.github/workflows/inputs/in_ae_mlp.yaml
          python3 -m xanesnet.cli --mode predict_xanes --in_model models/model_ae_mlp_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: AE_MLP Xanes --> XYZ
        run: |
          rm -rf models/model_ae_mlp_001
          python3 -m xanesnet.cli --mode train_xanes --in_file ./.github/workflows/inputs/in_ae_mlp.yaml
          python3 -m xanesnet.cli --mode predict_xyz --in_model models/model_ae_mlp_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: AE_CNN XYZ --> Xanes
        run: |
          rm -rf models/model_ae_cnn_001
          python3 -m xanesnet.cli --mode train_xyz --in_file ./.github/workflows/inputs/in_ae_cnn.yaml
          python3 -m xanesnet.cli --mode predict_xanes --in_model models/model_ae_cnn_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: AE_CNN Xanes --> XYZ
        run: |
          rm -rf models/model_ae_cnn_001
          python3 -m xanesnet.cli --mode train_xanes --in_file ./.github/workflows/inputs/in_ae_cnn.yaml
          python3 -m xanesnet.cli --mode predict_xyz --in_model models/model_ae_cnn_001 --in_file ./.github/workflows/inputs/in_predict.yaml

      - name: AEGAN
        run: |
          rm -rf models/model_aegan_mlp_001
          python3 -m xanesnet.cli --mode train_aegan --in_file ./.github/workflows/inputs/in_aegan.yaml
          python3 -m xanesnet.cli --mode predict_all --in_model models/model_aegan_mlp_001 --in_file ./.github/workflows/inputs/in_predict.yaml



